package org.khasanof.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OptionVariantAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOptionVariantAllPropertiesEquals(OptionVariant expected, OptionVariant actual) {
        assertOptionVariantAutoGeneratedPropertiesEquals(expected, actual);
        assertOptionVariantAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOptionVariantAllUpdatablePropertiesEquals(OptionVariant expected, OptionVariant actual) {
        assertOptionVariantUpdatableFieldsEquals(expected, actual);
        assertOptionVariantUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOptionVariantAutoGeneratedPropertiesEquals(OptionVariant expected, OptionVariant actual) {
        assertThat(expected)
            .as("Verify OptionVariant auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOptionVariantUpdatableFieldsEquals(OptionVariant expected, OptionVariant actual) {
        assertThat(expected)
            .as("Verify OptionVariant relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getStock()).as("check stock").isEqualTo(actual.getStock()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOptionVariantUpdatableRelationshipsEquals(OptionVariant expected, OptionVariant actual) {
        assertThat(expected)
            .as("Verify OptionVariant relationships")
            .satisfies(e -> assertThat(e.getPrice()).as("check price").isEqualTo(actual.getPrice()))
            .satisfies(e -> assertThat(e.getOption()).as("check option").isEqualTo(actual.getOption()));
    }
}
